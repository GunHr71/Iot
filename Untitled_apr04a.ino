#include "arduino_secrets.h"
/*
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/aea228f8-8386-468d-acc1-12b290fbc910

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  CloudColoredLight light;
  CloudSwitch switch1;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
const uint8_t ledPin = 18;

const int pwn1_pin = 12;
const int canalPWM1 = 0;
const int freq_ch1 = 60;
const int resol_1    = 8;

const int pwn2_pin = 13;
const int canalPWM2 = 1;
const int freq_ch2 = 60;
const int resol_2    = 8;

const int pwn3_pin = 14;
const int canalPWM3 = 2;
const int freq_ch3 = 60;
const int resol_3    = 8;

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500);
  pinMode(ledPin, OUTPUT);

  ledcSetup(canalPWM1, freq_ch1,  resol_1);
  ledcAttachPin(pwn1_pin, canalPWM1);
  
  ledcSetup(canalPWM2, freq_ch2,  resol_2);
  ledcAttachPin(pwn2_pin, canalPWM2);
  
  ledcSetup(canalPWM3, freq_ch3,  resol_3);
  ledcAttachPin(pwn3_pin, canalPWM3);
  
  //Todos los PWM estaran a 0, hasta que se indique lo contrario por alexa
  ledcWrite(canalPWM1, 254);
  ledcWrite(canalPWM2, 0);
  ledcWrite(canalPWM3, 254);
  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);

  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
  */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here
}


/*
  Since Switch1 is READ_WRITE variable, onSwitch1Change() is
  executed every time a new value is received from IoT Cloud.
*/
void onSwitch1Change()  {
  // Add your code here to act upon Switch1 change
  if (switch1) {
    digitalWrite(ledPin, HIGH);
  }
  else {
    digitalWrite(ledPin, LOW);
  }
}
/*
  Since Light is READ_WRITE variable, onLightChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onLightChange()  {
  // Add your code here to act upon Light change
  uint8_t r, g, b;
  light.getValue().getRGB(r, g, b);
  //Serial.println("R:"+String(r)+ " G:"+string(g)+ " B:"+String(b));
  Serial.printf("aq1 r=%d g=%d b=%d\n", r, g, b);
  ledcWrite(canalPWM1, 255 ^ r);
  ledcWrite(canalPWM2, 255 ^ g);
  ledcWrite(canalPWM3, 255 ^ b);
}

